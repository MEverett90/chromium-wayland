name: Build Chromium-Wayland x86_64

on: 
  workflow_dispatch:
    inputs:
      srcrev: 
        description: 'Chromium Release Tag'
        required: True
        default: ''
      release: 
        description: 'Release'
        required: false
        default: 'false'


jobs:
  Build-Chromium-Wayland:
    runs-on: [self-hosted, linux]
    env:
      tag_debug:         chromium-wayland-debug-x86_64-${{ inputs.srcrev }}
      notes_debug:       "Chromium-Wayland Binary Distribution - debug"

    container:
      image: ghcr.io/meta-flutter/meta-flutter/ubuntu-20-chromium-wayland:main
      # options:
      #   --log-driver=none
      #   --user 1001:1001
      #   --userns keep-id:uid=1001,gid=1001
      #   --security-opt label=disable
      #   --pids-limit=-1
      #   --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
      #   --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1

    steps:  
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install packages
        run: |
          mkdir code
          mkdir code/automate
          mkdir code/chromium_git
          python3 ./install-build-deps.py --no-arm --no-chromeos-fonts --no-nacl

      - name: Get Depot Tools
        working-directory: code
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH=/home/dev/chromium-wayland/code/depot_tools:$PATH

      - name: Create Automation Script
        run: |
          cp update.sh code/chromium_git/update.sh
          chmod 755 code/chromium_git/update.sh
          cd code/automate
          wget https://bitbucket.org/chromiumembedded/cef/raw/master/tools/automate/automate-git.py

      - name: Run Script
        run: |
          python3 code/automate/automate-git.py --download-dir=code/chromium_git --depot-tools-dir=code/depot_tools --no-distrib --no-build --chromium-checkout=refs/tags/${{ inputs.srcrev }}

      - name: Apply Patch
        working-directory: code/chromium_git/chromium/src
        run: |
          git apply ../../../../0001_enable_gl_without_angle.patch          

      - name: Setup Build
        working-directory: code/chromium_git/chromium/src/cef
        run: |
          export GN_DEFINES="use_sysroot=true use_allocator=none symbol_level=1 is_cfi=false use_thin_lto=false use_ozone=true ozone_auto_platforms=false ozone_platform_wayland=true use_xkbcommon=true use_gtk=false"
          ./cef_create_projects.sh

      - name: Build
        working-directory: code/chromium_git/chromium/src
        run: |
          autoninja -C out/Debug_GN_x64 cefsimple chrome_sandbox

      - name: Create Binary Distribution
        working-directory: code/chromium_git/chromium
        run: |
          python3 src/cef/tools/make_distrib.py --output_dir binary_distrib/
          cd binary_distrib
          tar -czf $tag_debug.tar.gz cef_binary*
          sha256sum -b $tag_debug.tar.gz         > $tag_debug.tar.gz.sha256

      - name: Publish Artifact
        if: ${{ inputs.release != 'true' }}
        uses: actions/upload-artifact@v4
        with:
            name: chromium-wayland-binary-distribution
            path: |
              code/chromium_git/chromium/binary_distrib/$tag_debug.tar.gz
              code/chromium_git/chromium/binary_distrib/$tag_debug.tar.gz.sha256

      - name: Release - Publish Release
        if: ${{ inputs.release == 'true' }}
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          gh release delete "$tag_debug" --cleanup-tag -y |true
          gh release create --draft "$tag_debug" --title "$tag_debug" --notes "$notes_debug"
          gh release upload "$tag_debug" "$tag_debug.tar.gz" "$tag_debug.tar.gz.sha256"
          gh release edit "$tag_debug" --draft=false
